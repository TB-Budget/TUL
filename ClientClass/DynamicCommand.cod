--Turbo Utilities Library (c) Златовратский Павел(ТБ.Бюджет), 2015

--Данный проект является свободным программным обеспечением. Вы вправе распространять его
--и/или модифицировать в соответствии с условиями версии 2.1 либо по вашему выбору с условиями
--более поздней версии Стандартной Общественной Лицензии Ограниченного Применения GNU,
--опубликованной Free Software Foundation.

--Мы распространяем этот проект в надежде на то, что он будет вам полезен, однако
--НЕ ПРЕДОСТАВЛЯЕМ НА НЕГО НИКАКИХ ГАРАНТИЙ, в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
--и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ. Для получения более подробной информации
--ознакомьтесь со Стандартной Общественной Лицензией Ограниченного Применений GNU.

--Вместе с данным проектом вы должны были получить экземпляр Стандартной Общественной Лицензии
--Ограниченного Применения GNU. Если вы его не получили, сообщите об этом в Software Foundation, Inc.,
--59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

class inherited Command "Команда, вызывающая объект-функцию";

inclass
  func CreateEx(Callback: TUL.FuncObj): DynamicCommand;
    Result = inherited Create;
    Result.cb = Callback;
  end;

inobject
  var cb: TUL.FuncObj;

  proc OnDispatch;
    cb.Call([]);
  end;

  proc Register(ClassName: String);
  -- Регистрирует команду в группе команд заданного класса
    var commgr: CommandGroup;
    var  i, ii, y, yy: Integer;
    with Commands do
      for i = 1 .. ii do
        if Group[i] = 'Local':
          with Group[i] do
            --Ищем группу заданного класса
            for y = 1 .. yy do
              if Group[y] = ClassName:
                commgr = Group[y];
                Break;
              fi;
            od;
           --Если ничего не нашли - создадим группу сами
            if commgr = nil:
              commgr = AddGroup(ClassName);
            fi;
          end;
          Break;
        fi;
      od;
    end;
    --Регистрируем команду
    commgr.AddCommand(self);
  end;
end





