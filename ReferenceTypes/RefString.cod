--Turbo Utilities Library (c) Losev Petr (ТБ.Бюджет), 2015

--Данный проект является свободным программным обеспечением. Вы вправе распространять его
--и/или модифицировать в соответствии с условиями версии 2.1 либо по вашему выбору с условиями
--более поздней версии Стандартной Общественной Лицензии Ограниченного Применения GNU,
--опубликованной Free Software Foundation.

--Мы распространяем этот проект в надежде на то, что он будет вам полезен, однако
--НЕ ПРЕДОСТАВЛЯЕМ НА НЕГО НИКАКИХ ГАРАНТИЙ, в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
--и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ. Для получения более подробной информации
--ознакомьтесь со Стандартной Общественной Лицензией Ограниченного Применений GNU.

--Вместе с данным проектом вы должны были получить экземпляр Стандартной Общественной Лицензии
--Ограниченного Применения GNU. Если вы его не получили, сообщите об этом в Software Foundation, Inc.,
--59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

class inherited RefType "Ссылочный тип строки";

inclass public

  func ConCat(values: RefString[]): RefString;
    var i, ii: Integer;
    result = New(nil as String);
    ii = LengthOfArray(values);
    for i = 1 .. ii do
      result.Set(result.Get + values[i].Get);
    od;
  end;

inclass private

  func DynamicCast(obj: Variant): Variant;
    return (obj as String);
  end;

inobject public

  func Length: Integer;
    return (System.Length(Get as String));
  end;


inobject private


end