--Turbo Utilities Library (c) Златовратский Павел(ТБ.Бюджет), 2016

--Данный проект является свободным программным обеспечением. Вы вправе распространять его
--и/или модифицировать в соответствии с условиями версии 2.1 либо по вашему выбору с условиями
--более поздней версии Стандартной Общественной Лицензии Ограниченного Применения GNU,
--опубликованной Free Software Foundation.

--Мы распространяем этот проект в надежде на то, что он будет вам полезен, однако
--НЕ ПРЕДОСТАВЛЯЕМ НА НЕГО НИКАКИХ ГАРАНТИЙ, в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
--и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ. Для получения более подробной информации
--ознакомьтесь со Стандартной Общественной Лицензией Ограниченного Применений GNU.

--Вместе с данным проектом вы должны были получить экземпляр Стандартной Общественной Лицензии
--Ограниченного Применения GNU. Если вы его не получили, сообщите об этом в Software Foundation, Inc.,
--59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

class inherited Итераторы.Итератор "Отображение" synonym Map;

inclass
  func New(ApFunc: FuncObj; const InIter: Variant): Итераторы.Отображение;
    Result = Create;
    if varType(InIter) = varArray then
       Result.InIter = Итераторы.OnArrayDense.New(InIter as Variant[]);
    else
       Result.InIter = InIter;
    end;
    Result.ApFunc = ApFunc;
  end;

inobject
  var InIter: UserObject;
  var ApFunc: FuncObj;
  var _Current: Variant;
  func Текущий synonym Current: Variant;
     return self._Current;
  end;

  func НаСледующий synonym MoveNext: Logical;
     -- Переводит указатель на следующий элемент и возващает Истина
     -- Если это невозможно - возвращает Ложь
     if InIter.MoveNext:
       self._Current = ApFunc.Call([InIter.Current]);
       return True;
     else
       return False;
     fi;
  end;

  func Сброс synonym Reset: Logical;
     InIter.Reset;
  end;

end