--Turbo Utilities Library (c) Златовратский Павел(ТБ.Бюджет), 2015

--Данный проект является свободным программным обеспечением. Вы вправе распространять его
--и/или модифицировать в соответствии с условиями версии 2.1 либо по вашему выбору с условиями
--более поздней версии Стандартной Общественной Лицензии Ограниченного Применения GNU,
--опубликованной Free Software Foundation.

--Мы распространяем этот проект в надежде на то, что он будет вам полезен, однако
--НЕ ПРЕДОСТАВЛЯЕМ НА НЕГО НИКАКИХ ГАРАНТИЙ, в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
--и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ. Для получения более подробной информации
--ознакомьтесь со Стандартной Общественной Лицензией Ограниченного Применений GNU.

--Вместе с данным проектом вы должны были получить экземпляр Стандартной Общественной Лицензии
--Ограниченного Применения GNU. Если вы его не получили, сообщите об этом в Software Foundation, Inc.,
--59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

class "Параметры типа сохраняемого в базу объекта";

inobject
  var Name: String; -- кодовое обозначение
  var Class_: Class; --Класс объекта (может использоваться для упрощения вызова)
  var IniFunc: FuncObj; --Функция, создания нового объекта (критично если объект базовый)
  var LoadFunc: FuncObj; --Функция для загрузки из базы
  var LoadFuncS: String; --Строковое предсатвление функции загрузки (для ускорения сохранения)
  var KeepFunc: FuncObj; --Функция создающая набор аргументов для загрузки
                        -- LoadFunc.Call(KeepFunc.Call([Obj])) == Obj
  func MakeNew(Args: Variant[] = nil): Variant;
    if self.IniFunc <> nil then
      return self.IniFunc.Call(Args);
    elsif self.Class_ <> nil:
      return self.Class_.Create;
    else
      return nil;
    end;
  end;
end