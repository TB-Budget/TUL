--Turbo Utilities Library (c) Златовратский Павел(ТБ.Бюджет), 2015

--Данный проект является свободным программным обеспечением. Вы вправе распространять его
--и/или модифицировать в соответствии с условиями версии 2.1 либо по вашему выбору с условиями
--более поздней версии Стандартной Общественной Лицензии Ограниченного Применения GNU,
--опубликованной Free Software Foundation.

--Мы распространяем этот проект в надежде на то, что он будет вам полезен, однако
--НЕ ПРЕДОСТАВЛЯЕМ НА НЕГО НИКАКИХ ГАРАНТИЙ, в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
--и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ. Для получения более подробной информации
--ознакомьтесь со Стандартной Общественной Лицензией Ограниченного Применений GNU.

--Вместе с данным проектом вы должны были получить экземпляр Стандартной Общественной Лицензии
--Ограниченного Применения GNU. Если вы его не получили, сообщите об этом в Software Foundation, Inc.,
--59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

class "Библиотека функциональной идиоматики";

inclass
  func Map(MyFunc: FuncObj; const Arg1: Variant[]): Variant[];
    var i, ii: Integer;
    ii = LengthOfArray(Arg1);
    for i = 1 .. ii do
        Result[i] = MyFunc.Call([Arg1[i]]);
    end;
  end;

  func Reduce(MyFunc: FuncObj; const Arg: Variant[]; Init: Variant = nil): Variant;
    var j, i, ii: Integer;
    if varType(Init) = varNull then
      Result = Arg[1];
      j = 2;
    else
      Result = Init;
      j = 1;
    end;
    ii = LengthOfArray(Arg);
    for i = j..ii do
       Result = MyFunc.Call([Result, Arg[i]]);
    end;
  end;

  func Filter(Condition: FuncObj; const InArray: Variant[]): Variant[];
    var i, j: Integer;
    var OutArray: Variant[];
    i = NextArrItem(InArray, 0);
    j = 1;
    while i <> -1 do   -- for i = 1 .. ii do
      if Condition.Call([InArray[i]]) then
        OutArray[j] = InArray[i];
        j = j + 1;  --это быстрее чем каждый раз вычислять длину OutArray;
      end;
      i = NextArrItem(InArray, i);
    end;
    Result = OutArray;
  end;


end