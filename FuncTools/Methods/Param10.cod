--Turbo Utilities Library (c) Златовратский Павел(ТБ.Бюджет), 2015

--Данный проект является свободным программным обеспечением. Вы вправе распространять его
--и/или модифицировать в соответствии с условиями версии 2.1 либо по вашему выбору с условиями
--более поздней версии Стандартной Общественной Лицензии Ограниченного Применения GNU,
--опубликованной Free Software Foundation.

--Мы распространяем этот проект в надежде на то, что он будет вам полезен, однако
--НЕ ПРЕДОСТАВЛЯЕМ НА НЕГО НИКАКИХ ГАРАНТИЙ, в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
--и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ. Для получения более подробной информации
--ознакомьтесь со Стандартной Общественной Лицензией Ограниченного Применений GNU.

--Вместе с данным проектом вы должны были получить экземпляр Стандартной Общественной Лицензии
--Ограниченного Применения GNU. Если вы его не получили, сообщите об этом в Software Foundation, Inc.,
--59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

class inherited Methods.Param 'Метод как экземпляр функции';

InObject Public

  func thisCallVar(Obj: Variant; var p1,p2,p3,p4,p5,p6,p7,p8,p9,p10: Variant = nil): Variant;
      if myKind = 2:
        Result = myMeth.CallFunc(Obj,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10);
      elsif myKind = 1:
        try
          myMeth.CallProc(Obj,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10);
          Result = True;
        except
          raise;
        end;
      else
        SetError(0,"Метод не является процедурой или функцией");
      end;
  end;

  func ВызватьПер synonym CallVar(var p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13:Variant = nil): Variant;
      Result = self.thisCallVar(if(myObj = nil,myCla,myObj),p1,p2,p3,p4,p5,p6,p7,p8,p9,p10);
  end;

end