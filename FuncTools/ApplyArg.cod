--Turbo Utilities Library (c) Златовратский Павел(ТБ.Бюджет), 2015

--Данный проект является свободным программным обеспечением. Вы вправе распространять его
--и/или модифицировать в соответствии с условиями версии 2.1 либо по вашему выбору с условиями
--более поздней версии Стандартной Общественной Лицензии Ограниченного Применения GNU,
--опубликованной Free Software Foundation.

--Мы распространяем этот проект в надежде на то, что он будет вам полезен, однако
--НЕ ПРЕДОСТАВЛЯЕМ НА НЕГО НИКАКИХ ГАРАНТИЙ, в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
--и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ. Для получения более подробной информации
--ознакомьтесь со Стандартной Общественной Лицензией Ограниченного Применений GNU.

--Вместе с данным проектом вы должны были получить экземпляр Стандартной Общественной Лицензии
--Ограниченного Применения GNU. Если вы его не получили, сообщите об этом в Software Foundation, Inc.,
--59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

class inherited FuncObj "Функция с частично сохраненными аргументами";

inclass
  func New synonym CreateEx(OldFunc: Tul.FuncObj; Args: Variant[]): ApplyArg;
    Result = inherited Create;
    Result.KeptArgs = Args;
    Result.OldFunc = OldFunc;
  end;

inobject

  var KeptArgs: Variant[];
  var OldFunc: Tul.FuncObj;

   func Вызвать synonym Call(Params: Variant[]): Variant;
     var i0, i, ii: Integer;
     var MyParams[]: Variant;
     MyParams = KeptArgs;
     --Extend
     i0 = LengthOfArray(MyParams);
     ii = LengthOfArray(Params);
     for i = 1..ii do
       MyParams[i0 + i] = Params[i];
     end;

     OldFunc.Call(MyParams);
   end;

end