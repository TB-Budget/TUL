--Turbo Utilities Library (c) Златовратский Павел(ТБ.Бюджет), 2017

--Данный проект является свободным программным обеспечением. Вы вправе распространять его
--и/или модифицировать в соответствии с условиями версии 2.1 либо по вашему выбору с условиями
--более поздней версии Стандартной Общественной Лицензии Ограниченного Применения GNU,
--опубликованной Free Software Foundation.

--Мы распространяем этот проект в надежде на то, что он будет вам полезен, однако
--НЕ ПРЕДОСТАВЛЯЕМ НА НЕГО НИКАКИХ ГАРАНТИЙ, в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
--и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ. Для получения более подробной информации
--ознакомьтесь со Стандартной Общественной Лицензией Ограниченного Применений GNU.

--Вместе с данным проектом вы должны были получить экземпляр Стандартной Общественной Лицензии
--Ограниченного Применения GNU. Если вы его не получили, сообщите об этом в Software Foundation, Inc.,
--59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

class inherited FuncObj "Функция, кеширующая результат";

inclass
  func New synonym CreateEx(realFunc: FuncObj):Memoized;
    Result.Cache = Коллекция.Словарь.Create;
    Result.realFunc = realFunc;
  end;

inobject

var realFunc: FuncObj;
var Cache: Коллекция.Словарь;

   func Вызвать synonym Call(Params: Variant[]): Variant;
     if self.Cache.Have(Params) then
       return self.Cache.Get(Params);
     else
       Result = self.realFunc.Call(Params);
       self.Cache.Добавить(Params, Result);
     fi;
   end;

end