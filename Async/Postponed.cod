--Turbo Utilities Library (c) Златовратский Павел(ТБ.Бюджет), 2020

--Данный проект является свободным программным обеспечением. Вы вправе распространять его
--и/или модифицировать в соответствии с условиями версии 2.1 либо по вашему выбору с условиями
--более поздней версии Стандартной Общественной Лицензии Ограниченного Применения GNU,
--опубликованной Free Software Foundation.

--Мы распространяем этот проект в надежде на то, что он будет вам полезен, однако
--НЕ ПРЕДОСТАВЛЯЕМ НА НЕГО НИКАКИХ ГАРАНТИЙ, в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
--и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ. Для получения более подробной информации
--ознакомьтесь со Стандартной Общественной Лицензией Ограниченного Применений GNU.

--Вместе с данным проектом вы должны были получить экземпляр Стандартной Общественной Лицензии
--Ограниченного Применения GNU. Если вы его не получили, сообщите об этом в Software Foundation, Inc.,
--59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

class inherited Task "Отложенное применение функции";

inclass
  func New(aDoFunc: FuncObj; args_:Variant[]):Postponed;
    Result = Create;
    Result.DoFunc = aDoFunc;
    Result.args = args_;
  end;
inobject
  var args[]:Variant;
  var dofunc: FuncObj;

  proc Process;
     if not ready then
       self._result = self.dofunc.Call(self.args);
       self._ready = true;
     fi;
  end;
--  func Get:Variant;
--    self.Process;
--    return self.AResult;
--  end;

end