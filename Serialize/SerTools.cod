--Turbo Utilities Library (c) Златовратский Павел(ТБ.Бюджет), 2015

--Данный проект является свободным программным обеспечением. Вы вправе распространять его
--и/или модифицировать в соответствии с условиями версии 2.1 либо по вашему выбору с условиями
--более поздней версии Стандартной Общественной Лицензии Ограниченного Применения GNU,
--опубликованной Free Software Foundation.

--Мы распространяем этот проект в надежде на то, что он будет вам полезен, однако
--НЕ ПРЕДОСТАВЛЯЕМ НА НЕГО НИКАКИХ ГАРАНТИЙ, в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
--и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ. Для получения более подробной информации
--ознакомьтесь со Стандартной Общественной Лицензией Ограниченного Применений GNU.

--Вместе с данным проектом вы должны были получить экземпляр Стандартной Общественной Лицензии
--Ограниченного Применения GNU. Если вы его не получили, сообщите об этом в Software Foundation, Inc.,
--59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

class "Методы запаковки/распаковки через текстовое представление";

inclass
   func SerObj(obj: Object):String;
     if obj.inheritsfrom(record) then
       Result = obj.DocIDStr;
     elsif obj.ClassInfo.MemberByName("ToString")<>nil and
           obj.ClassInfo.MemberByName("FromString")<>nil then
       Result = "{";
       Result = Result + obj.ClassProject + "." + obj.ClassName;
       result = Result + ":";
       result = Result + obj.ToString;
       Result = Result + "}";
     else
       SetError(26, "Cannot serialize object");
     end;
   end;

   func UnSerObj(ser: String):Object;
     var L, P: Integer;
     var myCla: Class;
     if Substr(ser, 1, 1) <> '{' then
       SetError(92, "{ expected at start of object representation");
     end;
     L = Length(ser);
     if Substr(ser, L, 1) <> '}' then
       SetError(93, "} expected at end of object representation");
     end;
     P = CharPos(":", ser);
     myCla = FindClass(Substr(ser, 2, P - 2));
     if myCla.inheritsfrom(Record) then
       return Record.Load(ser);
     end;
     if myCla.ClassInfo.MemberByName("FromString") <> nil then
        return myCla.FromString(Substr(ser, P+1, L-P-1));
     end;
   end;
inobject

end